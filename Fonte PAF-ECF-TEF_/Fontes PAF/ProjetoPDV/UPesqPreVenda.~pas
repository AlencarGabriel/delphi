unit UPesqPreVenda;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Buttons, Mask, ExtCtrls, ToolEdit, rxToolEdit;

type
  TFPesquisaDAV = class(TForm)
    BTOk: TBitBtn;
    BTCancela: TBitBtn;
    RGTipo: TRadioGroup;
    NB: TNotebook;
    EDataI: TDateEdit;
    Label2: TLabel;
    EDataF: TDateEdit;
    Label1: TLabel;
    Label3: TLabel;
    ENumDAV: TEdit;
    ECodVendedor: TEdit;
    ENomeVendedor: TEdit;
    BTPesqVendedor: TBitBtn;
    ECodCliente: TEdit;
    ECliente: TEdit;
    BTPesqCliente: TBitBtn;
    procedure FormKeyPress(Sender: TObject; var Key: Char);
    procedure FormKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure FormShow(Sender: TObject);
    procedure BTCancelaClick(Sender: TObject);
    procedure BTOkClick(Sender: TObject);
    procedure BTPesqVendedorClick(Sender: TObject);
    procedure BTPesqClienteClick(Sender: TObject);
    procedure EDataIExit(Sender: TObject);
    procedure EDataIEnter(Sender: TObject);
    procedure ECodVendedorKeyPress(Sender: TObject; var Key: Char);
    procedure ECodClienteKeyPress(Sender: TObject; var Key: Char);
    procedure ENumDAVEnter(Sender: TObject);
    procedure ENumDAVExit(Sender: TObject);
    procedure RGTipoClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FPesquisaDAV: TFPesquisaDAV;
  procedure ConsultaDAV(iFlag : Integer);

implementation

uses UBarsa, dmsyndAC, UBuscaPreVenda, UVendedor, frmpesquisacliente,
     DBClient, Math;

{$R *.dfm}

procedure TFPesquisaDAV.FormKeyPress(Sender: TObject; var Key: Char);
begin
     TabEnter(FPesquisaDAV,Key);
end;

procedure TFPesquisaDAV.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
     if Key=VK_Escape
     then Close;
end;

procedure TFPesquisaDAV.FormShow(Sender: TObject);
begin
     LimpaEdit(FPesquisaDAV);
     EDataI.Date:=(Date);
     EDataF.Date:=(Date);
     NB.PageIndex:=0;
     RGTipo.ItemIndex:=0;
     RGtipo.SetFocus;
end;

procedure TFPesquisaDAV.BTCancelaClick(Sender: TObject);
begin
     Close;
end;

procedure TFPesquisaDAV.BTOkClick(Sender: TObject);
begin
     ConsultaDAV(0);
end;

procedure ConsultaDAV(iFlag : Integer);
begin
     AC;
     With DM.QBuscaDAV
     do begin
        Close;
        Sql.Clear;
        Sql.Add('SELECT O.CODIGO,O.DTEMISSAO,O.CODCLIENTE,O.NOMECLIENTE,O.CODVENDEDOR,'+
                'O.DESCONTO,O.VALOR,O.TOTALCUSTO,O.OBS,O.NUMERO_DAV,O.VALIDADE,O.SITUACAO,'+
                'O.ALTERADO,O.HORA,O.FLAG,O.NUMERO_FLAG,V.NOME FROM ORCAMENTO O');
        Sql.Add('LEFT JOIN VENDEDOR V ON V.CODIGO = O.CODVENDEDOR');
        if iFlag = 0
        then begin
              if FPesquisaDAV.RGTipo.ItemIndex=0
              then begin
                   Sql.Add('WHERE O.NUMERO_DAV=:PDAV');
                   ParamByName('PDAV').AsInteger:=StrToInt(FPesquisaDAV.ENumDAV.Text);
                   end
              else if FPesquisaDAV.RGTipo.ItemIndex=1
              then begin
                   Sql.Add('WHERE O.DTEMISSAO BETWEEN :PDATAI AND :PDATAF');
                   ParamByName('PDATAI').AsDate:=FPesquisaDAV.EDataI.Date;
                   ParamByName('PDATAF').AsDate:=FPesquisaDAV.EDataF.Date;
                   end
              else if FPesquisaDAV.RGTipo.ItemIndex=2
              then begin
                   Sql.Add('WHERE O.CODVENDEDOR=:PCODVENDEDOR');
                   ParamByName('PCODVENDEDOR').AsInteger:=StrToInt(FPesquisaDAV.ECodVendedor.Text);
                   end
              else if FPesquisaDAV.RGTipo.ItemIndex=3
              then begin
                   Sql.Add('WHERE O.CODCLIENTE=:PCODCLIENTE');
                   ParamByName('PCODCLIENTE').AsInteger:=StrToInt(FPesquisaDAV.ECodCliente.Text);
                   end;
              Sql.Add('AND O.SITUACAO = ''A''');
              Sql.Add('AND O.ALTERADO IS NULL');
              end
        else if iFlag = 1
        then begin
             Sql.Add('WHERE O.SITUACAO = ''A''');
             Sql.Add('AND O.ALTERADO IS NULL');
             end;
        end;
        DM.TBuscaDAV.Close;
        DM.TBuscaDAV.IndexFieldNames:='DTEMISSAO;NUMERO_DAV';
        DM.TBuscaDAV.Open;
        DC;
        if DM.TBuscaDAV.RecordCount = 0
        then begin
             Informa('Nenhuma ocorrência Encontrada!');
             if iFlag = 0
             then FPesquisaDAV.RGTipo.SetFocus;
             end
        else begin
             FBuscaDAV.DBGrid1.SelectedIndex:=4;
             FBuscaDAV.DBGrid1.SetFocus;
             if iFlag = 0
             then FPesquisaDAV.Close;
             end;
end;

procedure TFPesquisaDAV.BTPesqVendedorClick(Sender: TObject);
begin
     if Trim(ECodVendedor.text)=''
     then begin
          Try
             if FVendedor=Nil
             then application.CreateForm(TFVendedor, FVendedor);
             FVendedor.vConsulta:=True;
             FVendedor.ShowModal;
             FVendedor.vConsulta:=False;
             if FVendedor.ModalResult=mrOk
             then begin
                  ECodVendedor.text:=StrZero(DM.TVendedorCodigo.Value,5);
                  ENomeVendedor.Text:=DM.TVendedorNome.Value;
                  BTOk.SetFocus;
                  end;
          Finally
             FVendedor.Release;
             FVendedor:=Nil;
             end;
          end
     else begin
         Try
          DM.TVendedor.Open;
          if DM.TVendedor.Locate('CODIGO',StrToInt(ECodVendedor.Text),[])
          then begin
               ECodVendedor.text:=StrZero(DM.TVendedorCodigo.Value,5);
               ENomeVendedor.Text:=DM.TVendedorNome.Value;
               DM.TVendedor.Close;
               BtOk.SetFocus;
               end
          else begin
               Informa('Vendedor não Cadastrado!');
               ECodVendedor.SetFocus;
               DM.TVendedor.Close;
               end;
         Except
            InformaError('Consulta Inválida!');
            ECodVendedor.Clear;
            ECodVendedor.SetFocus;
          end;
      end;
end;

procedure TFPesquisaDAV.BTPesqClienteClick(Sender: TObject);
begin
      if Trim(ECodCliente.text)=''
      then begin
            Try
               if FPesquisaCliente=Nil
               then application.CreateForm(TFPesquisaCliente, FPesquisaCliente);
               FPesquisaCliente.ShowModal;
               if FPesquisaCliente.ModalResult=mrOk
               then begin
                    ECodCliente.text:=StrZero(DM.TPesqClienteCodigo.Value,5);
                    ECliente.text:=DM.TPesqClienteNome.Value;
                    BTOkClick(Sender);
                    end;
            Finally
               FPesquisaCliente.Release;
               FPesquisaCliente:=Nil;
               end;
          end
      else begin
            With DM.QPesquisa
            do begin
               Close;
               Sql.Clear;
               Sql.add('SELECT CODIGO, NOME FROM CLIENTE');
               Sql.Add('WHERE CODIGO=:PCODIGO');
               ParamByName('PCODIGO').Value:=StrToInt(ECodCliente.text);
               open;
               end;
           Try
            if not DM.QPesquisa.IsEmpty
            then begin
                 ECodCliente.text:=StrZero(DM.QPesquisa.FieldByName('CODIGO').Value,5);
                 ECliente.text:=DM.QPesquisa.FieldByName('NOME').Value;
                 BTOk.SetFocus;
                 end
            else begin
                 Informa('Cliente não Cadastrado!');
                 ECodCliente.SetFocus;
                 end;
           Finally
            DM.QPesquisa.Close;
           end;
         end;
end;

procedure TFPesquisaDAV.EDataIExit(Sender: TObject);
begin
     if (Sender is TDateEdit) then
     TDateEdit(Sender).Color:=clWhite;
end;

procedure TFPesquisaDAV.EDataIEnter(Sender: TObject);
begin
     if (Sender is TDateEdit) then
     TDateEdit(Sender).Color:=$0080FFFF;
end;

procedure TFPesquisaDAV.ECodVendedorKeyPress(Sender: TObject;
  var Key: Char);
begin
     if Key=#13
     then BTPesqVendedorClick(Sender);
end;

procedure TFPesquisaDAV.ECodClienteKeyPress(Sender: TObject;
  var Key: Char);
begin
     if Key=#13
     then BTPesqClienteClick(Sender);
end;

procedure TFPesquisaDAV.ENumDAVEnter(Sender: TObject);
begin
     EntraFocu(Sender);
end;

procedure TFPesquisaDAV.ENumDAVExit(Sender: TObject);
begin
     FechaFocu(Sender);
end;

procedure TFPesquisaDAV.RGTipoClick(Sender: TObject);
begin
      NB.PageIndex:=RGTipo.ItemIndex;
end;

end.
